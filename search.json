[{"path":"https://drhealy013.github.io/turtle/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Darren Healy Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://drhealy013.github.io/turtle/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Darren Healy. Maintainer.","code":""},{"path":"https://drhealy013.github.io/turtle/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Healy D (2025). turtle: User-Friendly Pipelines Data Analysis. R package version 0.1.8, https://github.com/drhealy013/turtle.","code":"@Manual{,   title = {turtle: User-Friendly Pipelines for Data Analysis},   author = {Darren Healy},   year = {2025},   note = {R package version 0.1.8},   url = {https://github.com/drhealy013/turtle}, }"},{"path":[]},{"path":"https://drhealy013.github.io/turtle/index.html","id":"package-overview","dir":"","previous_headings":"","what":"Package Overview","title":"User-Friendly Pipelines for Data Analysis","text":"turtle R package provides simplified, user-friendly functions common data analysis tasks modelling, dimensionality reduction, visualization. designed support users minimal programming knowledge allowing specify key inputs (e.g., outcome, exposure, covariates etc.) automatically handle underlying code. applicable wide range data types, including epidemiological, ecological, experimental datasets. core functions include: run_linear_models(): Fit linear mixed models (can run single model many models).","code":""},{"path":"https://drhealy013.github.io/turtle/index.html","id":"how-to-get-the-package","dir":"","previous_headings":"","what":"How to get the package","title":"User-Friendly Pipelines for Data Analysis","text":"can install development version turtle GitHub :","code":"# install.packages(\"pak\") pak::pak(\"drhealy013/turtle\")"},{"path":"https://drhealy013.github.io/turtle/index.html","id":"workflow","dir":"","previous_headings":"","what":"Workflow","title":"User-Friendly Pipelines for Data Analysis","text":"example different functions can used data analysis: detail different sections data analysis, can find relevant guides end “Learn ” section.","code":""},{"path":"https://drhealy013.github.io/turtle/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"User-Friendly Pipelines for Data Analysis","text":"’s basic example run_linear_models() using built-mtcars dataset: function also takes lists exposures /outcomes loops different combinations. can provided directly function, storing variable. can check help section run_linear_models() (using “?run_linear_models() R) run_linear_models guide ”Learn ” examples.","code":"library(turtle)  # Example: Does car weight affect fuel efficiency? result <- run_linear_models(   data = mtcars,   outcome = \"mpg\",   # miles per gallon   exposure = \"wt\"    # weight of the car )  # View the results result$tidy #> # A tibble: 2 × 9 #>   term        estimate conf.low conf.high std.error  p.value error n_obs   BIC #>   <chr>          <dbl>    <dbl>     <dbl>     <dbl>    <dbl> <lgl> <int> <dbl> #> 1 (Intercept)    37.3     33.5      41.1      1.88  8.24e-19 NA       32  170. #> 2 wt             -5.34    -6.49     -4.20     0.559 1.29e-10 NA       32  170. library(turtle)  outcomes <- c(\"mpg\", \"disp\") exposures <- c(\"cyl\")  result <- run_linear_models(   data = mtcars,   outcome = outcomes,   exposure = exposures ) #> Warning in formula.character(object, env = baseenv()): Using formula(x) is deprecated when x is a character vector of length > 1. #>   Consider formula(paste(x, collapse = \" \")) instead.  result$tidy #> # A tibble: 2 × 9 #>   term        estimate conf.low conf.high std.error  p.value error n_obs   BIC #>   <chr>          <dbl>    <dbl>     <dbl>     <dbl>    <dbl> <lgl> <int> <dbl> #> 1 (Intercept)    37.9     33.6      42.1      2.07  8.37e-18 NA       32  174. #> 2 cyl            -2.88    -3.53     -2.22     0.322 6.11e-10 NA       32  174."},{"path":"https://drhealy013.github.io/turtle/index.html","id":"notes","dir":"","previous_headings":"","what":"Notes","title":"User-Friendly Pipelines for Data Analysis","text":"Deprecation warning: may see warning related formula.character() running examples. originates dependency package affect functionality results turtle. issue expected resolved future update underlying package.","code":""},{"path":"https://drhealy013.github.io/turtle/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"User-Friendly Pipelines for Data Analysis","text":"Fits linear (lm) mixed effects (lmer) models Covariates Effect modifiers Sensitivity covariates Random effects model: fitted model object (lm lmer) tidy: tidy summary model coefficients residuals: Model residuals formula: model formula used exposure: exposure variable used model_name: unique identifier model return_grid = TRUE, full model grid attached attribute","code":""},{"path":[]},{"path":"https://drhealy013.github.io/turtle/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"User-Friendly Pipelines for Data Analysis","text":"MIT © drhealy013","code":""},{"path":"https://drhealy013.github.io/turtle/reference/run_linear_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Linear or Mixed Effects Models Across Multiple Variable Combinations — run_linear_models","title":"Fit Linear or Mixed Effects Models Across Multiple Variable Combinations — run_linear_models","text":"function fits linear (`lm`) mixed effects (`lmer`) models across combinations outcomes, exposures, effect modifiers, sensitivity covariates. supports interaction terms, random effects, returns tidy summary model. designed simplify model fitting across many variable combinations consistent covariates random effects.","code":""},{"path":"https://drhealy013.github.io/turtle/reference/run_linear_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Linear or Mixed Effects Models Across Multiple Variable Combinations — run_linear_models","text":"data data frame containing variables used model. outcome character vector outcome variable names. exposure character vector exposure variable names. covariates character vector covariate names adjust (e.g., confounders). included models. effect_modifier character vector effect modifiers interact exposure. combinations tested. sensitivity_cov character vector sensitivity covariates include model. combinations tested. random_effects string specifying random effects structure (e.g., \"(1 | group)\"). `NULL`, linear model used. p_values Logical. `TRUE` (default), uses `lmerTest` compute p-values mixed models. `FALSE`, uses `lme4` without p-values. verbose Logical. `TRUE` (default), prints progress model status messages. return_grid Logical. `TRUE`, attaches model grid attribute returned object.","code":""},{"path":"https://drhealy013.github.io/turtle/reference/run_linear_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Linear or Mixed Effects Models Across Multiple Variable Combinations — run_linear_models","text":"named list model results. element contains: model fitted model object. tidy tidy summary model (term, estimate, confidence intervals, p-values, etc.). residuals Model residuals. formula model formula used. multiple combinations tested, list named using format `outcome&exposure&modifier&sensitivity`. list containing model results. multiple outcomes exposures provided, returns named list results.","code":""},{"path":"https://drhealy013.github.io/turtle/reference/run_linear_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Linear or Mixed Effects Models Across Multiple Variable Combinations — run_linear_models","text":"","code":"# Examples  data <- mtcars  if (FALSE) { # \\dontrun{ # 1. Run a single model with one outcome and one exposure run_linear_models(data = data,                   outcome = \"mpg\",                   exposure = \"cyl\") } # }  # 2. Store the output for a single model model_output <- run_linear_models(data = data,                                   outcome = \"mpg\",                                   exposure = \"cyl\") #> Running model with outcome = mpg, exposure = cyl #>  #> Note: You ran `this function` without assigning the result to a variable.To access model results later, assign the output like this: #>  results <- this function(...) #> Then you can access the tidy results with: #>  results$tidy # for a single model #>  results[[\"outcome&exposure\"]]$tidy # for multiple models model_output$tidy  # access tidy results #> NULL  # 3. Store output for multiple outcomes and exposures multi_output <- run_linear_models(data = data,                                   outcome = c(\"mpg\", \"hp\"),                                   exposure = c(\"cyl\", \"wt\")) #> Running model with outcome = mpg, exposure = cyl #> Running model with outcome = mpg, exposure = wt #> Running model with outcome = hp, exposure = cyl #> Running model with outcome = hp, exposure = wt #>  #> Note: You ran `this function` without assigning the result to a variable.To access model results later, assign the output like this: #>  results <- this function(...) #> Then you can access the tidy results with: #>  results$tidy # for a single model #>  results[[\"outcome&exposure\"]]$tidy # for multiple models multi_output[[\"mpg&cyl\"]]$tidy  # access a specific model's tidy results #> # A tibble: 2 × 11 #>   term  estimate conf.low conf.high std.error  p.value error n_obs   BIC formula #>   <chr>    <dbl>    <dbl>     <dbl>     <dbl>    <dbl> <lgl> <int> <dbl> <chr>   #> 1 (Int…    37.9     33.6      42.1      2.07  8.37e-18 NA       32  174. mpg ~ … #> 2 cyl      -2.88    -3.53     -2.22     0.322 6.11e-10 NA       32  174. mpg ~ … #> # ℹ 1 more variable: note <chr>  # 4. Use named vectors for outcomes and exposures outcomes <- c(\"mpg\", \"hp\") exposures <- c(\"cyl\", \"wt\") named_output <- run_linear_models(data = data,                                   outcome = outcomes,                                   exposure = exposures) #> Running model with outcome = mpg, exposure = cyl #> Running model with outcome = mpg, exposure = wt #> Running model with outcome = hp, exposure = cyl #> Running model with outcome = hp, exposure = wt #>  #> Note: You ran `this function` without assigning the result to a variable.To access model results later, assign the output like this: #>  results <- this function(...) #> Then you can access the tidy results with: #>  results$tidy # for a single model #>  results[[\"outcome&exposure\"]]$tidy # for multiple models named_output[[\"hp&wt\"]]$tidy #> # A tibble: 2 × 11 #>   term   estimate conf.low conf.high std.error p.value error n_obs   BIC formula #>   <chr>     <dbl>    <dbl>     <dbl>     <dbl>   <dbl> <lgl> <int> <dbl> <chr>   #> 1 (Inte…    -1.82    -67.8      64.2     32.3  9.55e-1 NA       32  353. hp ~ wt #> 2 wt        46.2      26.5      65.8      9.63 4.15e-5 NA       32  353. hp ~ wt #> # ℹ 1 more variable: note <chr>  # 5. Include covariates directly covar_output <- run_linear_models(data = data,                                   outcome = \"mpg\",                                   exposure = \"cyl\",                                   covariates = c(\"wt\", \"hp\")) #> Running model with outcome = mpg, exposure = cyl #>  #> Note: You ran `this function` without assigning the result to a variable.To access model results later, assign the output like this: #>  results <- this function(...) #> Then you can access the tidy results with: #>  results$tidy # for a single model #>  results[[\"outcome&exposure\"]]$tidy # for multiple models covar_output$tidy #> NULL  # 6. Include covariates using a named vector covars <- c(\"wt\", \"hp\") names(covars) <- covars named_covar_output <- run_linear_models(data = data,                                         outcome = \"mpg\",                                         exposure = \"cyl\",                                         covariates = covars) #> Running model with outcome = mpg, exposure = cyl #>  #> Note: You ran `this function` without assigning the result to a variable.To access model results later, assign the output like this: #>  results <- this function(...) #> Then you can access the tidy results with: #>  results$tidy # for a single model #>  results[[\"outcome&exposure\"]]$tidy # for multiple models named_covar_output$tidy #> NULL  # 7. Include an effect modifier (e.g., interaction term) interaction_output <- run_linear_models(data = data,                                         outcome = \"mpg\",                                         exposure = \"cyl\",                                         effect_modifier = \"am\") #> Running model with outcome = mpg, exposure = cyl, effect_modifier = am #>  #> Note: You ran `this function` without assigning the result to a variable.To access model results later, assign the output like this: #>  results <- this function(...) #> Then you can access the tidy results with: #>  results$tidy # for a single model #>  results[[\"outcome&exposure\"]]$tidy # for multiple models interaction_output$tidy #> NULL  # 8. Model with a non-existent variable (graceful failure) error_output <- run_linear_models(data = data,                                   outcome = \"mpg\",                                   exposure = \"not_a_column\") #> Running model with outcome = mpg, exposure = not_a_column #> Model failed for formula: mpg ~ not_a_column #> Error: object 'not_a_column' not found #>  #> Note: You ran `this function` without assigning the result to a variable.To access model results later, assign the output like this: #>  results <- this function(...) #> Then you can access the tidy results with: #>  results$tidy # for a single model #>  results[[\"outcome&exposure\"]]$tidy # for multiple models  error_output$tidy #> NULL"},{"path":"https://drhealy013.github.io/turtle/news/index.html","id":"turtle-development-version","dir":"Changelog","previous_headings":"","what":"turtle (development version)","title":"turtle (development version)","text":"Initial CRAN submission.","code":""},{"path":[]},{"path":"https://drhealy013.github.io/turtle/news/index.html","id":"initial-release-0-1-0","dir":"Changelog","previous_headings":"","what":"Initial release","title":"turtle 0.1.0","text":"Introduced run_linear_models() function fit linear (lm) mixed effects (lmer) models. Covariate adjustment Effect modification via interaction terms Sensitivity covariates Random effects specification fitted model object tidy summary fixed effects estimates, confidence intervals, standard errors, p-values, number observations, BIC Model formula Residuals Exposure variable name Includes robust error warning handling using purrr::safely() withCallingHandlers(). Includes errors warnings tidy output can viewed later interpreting results.","code":""},{"path":[]},{"path":"https://drhealy013.github.io/turtle/news/index.html","id":"update-runlinearmodels-0-1-1","dir":"Changelog","previous_headings":"","what":"Update runLinearModels","title":"turtle 0.1.1","text":"*Ask clarification user submits interaction exposure, additionally adds effect-modifier, confirm user wants pursue 3-way interactions. - Robust interactive non-interactive use","code":""},{"path":[]},{"path":"https://drhealy013.github.io/turtle/news/index.html","id":"update-runlinearmodels-0-1-2","dir":"Changelog","previous_headings":"","what":"Update runLinearModels","title":"turtle 0.1.2","text":"Added version check run_linear_models() user knows update needed . Added option include p-values, switch using lme4 run mixed-effect models.","code":""},{"path":[]},{"path":"https://drhealy013.github.io/turtle/news/index.html","id":"bugfix-0-1-3","dir":"Changelog","previous_headings":"","what":"BugFix","title":"turtle 0.1.3","text":"*Fixed bug tidy output optionally select p-values based whether exists output.","code":""},{"path":[]},{"path":"https://drhealy013.github.io/turtle/news/index.html","id":"update-runlinearmodels-0-1-4","dir":"Changelog","previous_headings":"","what":"Update runLinearModels","title":"turtle 0.1.4","text":"*Added functionality either single e.g., outcome exposure can provided, else vector e.g., outcomes exposures. list provided, loops possible combinations exposures outcomes.","code":""},{"path":[]},{"path":"https://drhealy013.github.io/turtle/news/index.html","id":"create-print_methods_run_linear_models-0-1-5","dir":"Changelog","previous_headings":"","what":"Create print_methods_run_linear_models","title":"turtle 0.1.5","text":"*Make custom printing function run_linear_models function provide feedback users familiar data analysis","code":""},{"path":[]},{"path":"https://drhealy013.github.io/turtle/news/index.html","id":"create-model_helpers--utils-0-1-6","dir":"Changelog","previous_headings":"","what":"Create model_helpers & utils","title":"turtle 0.1.6","text":"Create model_helpers script -Turn repetitive code run_linear_models helpers can easily updated utilised elsewhere Create utils script -Turn repetitive code run_linear_models utils can easily updated utilised elsewhere *Update run_linear_models -Remove model_helpers utils instead call separate files.","code":""},{"path":[]},{"path":"https://drhealy013.github.io/turtle/news/index.html","id":"created-model_helpers-0-1-7","dir":"Changelog","previous_headings":"","what":"Created model_helpers","title":"turtle 0.1.7","text":"*make_model_name detect_model_notes help clean run_linear_models code.","code":""},{"path":[]},{"path":"https://drhealy013.github.io/turtle/news/index.html","id":"bug-fix-0-1-8","dir":"Changelog","previous_headings":"","what":"Bug fix","title":"turtle 0.1.8","text":"*Updating S3 print methods helper print functions.","code":""}]
